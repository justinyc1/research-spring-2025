'''
@author Sabeeha Malikah
@date 2/8/25
@Description Post Research Meeting 2
            - This code can take in any values for m and uses d = 2.
            - So far, it finds the U set, B set, V set, and E set (set of exceptional cycles).
'''

import math

#This function computes the z mod m z star set given an m value.
def zmodmzstarset(m):
    z_star = []
    for i in range (1,m):
        if(math.gcd(i, m) == 1):
            z_star.append(i)
    return z_star

#This function computes the U set. It does not find the entire U set, only the tuples in the set that satisfy
#the conditions: 1. a<b<c<d and a+b+c+d = 0 (mod m)
def u_set(m):
    count = 0
    tuple_list = []
    for a in range(1, m-3):
        for b in range(a+1, m-2):
            for c in range(b+1, m-1):
                for d in range(c+1, m):
                    if a<b<c<d and (a+b+c+d)%m == 0:
                        tuple_list.append(tuple((a, b, c, d)))
                        count = count+1
    print("These are the tuple(s) in the U set: ")
    print(tuple_list)
    print("The number of tuple(s) is ",count)
    print()
    return tuple_list

#This function computes the B set. It checks which tuples in the U set satisfy the conditions necessary.
def b_set(m, u_list, z_star):
    tuple_list = []
    count = 0
    for u_tuple in u_list:
        t_count = 0
        #print("For tuple", u_tuple, "these are the t*tuple reduced mod m tuples:")
        for t in z_star:
            a = ((u_tuple[0] * t) % m)
            b = ((u_tuple[1] * t) % m)
            c = ((u_tuple[2] * t) % m)
            d = ((u_tuple[3] * t) % m)
            #print(tuple((a, b, c, d)))
            #its better to put the mod m in the if statement because when i put it in a, b, c, d
            #it becomes 1.999999998 and doesn't satisfy if statement below
            if ((a + b + c + d)/m) == 2.0:
                t_count = t_count+1
        if t_count == len(z_star):
            tuple_list.append(u_tuple)
            count = count+1
    print("These are the tuple(s) in the V/B set: ")
    print(tuple_list)
    print("The number of tuple(s) is ", count)
    print()
    return tuple_list

#This function computes the E set by identifying which tuples in the V set are exceptional cycles.
def e_set(m, b_list):
    tuple_list = b_list[:]
    list1 = []
    list2 = []
    count = len(b_list)
    for b_tuple in b_list:
        pair_count = 0
        i = 0
        j = len(b_tuple) - 1
        while i < len(b_tuple) and j > i:
            if b_tuple[i] + b_tuple[j] == m:
                pair_count += 1
            i += 1
            j -= 1

        if pair_count == int(len(b_tuple)/2):
            count -= 1
            tuple_list.remove(b_tuple)
        elif pair_count == 0:
            list1.append(b_tuple)
        else:
            list2.append(b_tuple)
    print("These are the tuple(s) in the E set: ")
    print(tuple_list)
    print("The number of tuple(s) is ", count)
    print("These tuples have no pairs that add to m =", m,)
    print(list1)
    print("The number of tuple(s) is ", len(list1))
    print("These tuples have some (but not all) pairs that add to m =", m, )
    print(list2)
    print("The number of tuple(s) is ", len(list2))
    print()
    return tuple_list

#main
m = 15
z_star = zmodmzstarset(m)
print("These are are integers in the z mod m z star set for m =", m,": ", z_star, "\n")
u_tuple_list = u_set(m)
b_tuple_list = b_set(m, u_tuple_list, z_star)
e_tuple_list = e_set(m, b_tuple_list)
