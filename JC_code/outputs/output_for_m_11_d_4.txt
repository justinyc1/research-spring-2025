Running method validate_set_V(m = 11, d = 4):

Summary:
given m = 11, d = 4
Calculations took 0 days, 0 hours, 0 minutes, 0 seconds, 0 miliseconds, 777 microseconds, 700 nanoseconds.
Z/mZ:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Z/mZ*: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
All ascending & non-repeating tuple (size 8) combinations possible for the U set: 45
All ascending & non-repeating tuple (size 1 to 8) combinations possible for the U set: 1023
            "reduced" U set: contains 5 tuples
                      V set: contains 5 tuples
          all_are_pairs set: contains 5 tuples
         some_are_pairs set: contains 0 tuples
         none_are_pairs set: contains 0 tuples
         indecomposable set: contains 0 tuples
decomposable & no pairs set: contains 0 tuples
     exceptional_cycles set: contains 0 tuples

Print V set (contains 5 tuples): {
(1, 2, 3, 5, 6, 8, 9, 10)
(1, 3, 4, 5, 6, 7, 8, 10)
(1, 2, 4, 5, 6, 7, 9, 10)
(1, 2, 3, 4, 7, 8, 9, 10)
(2, 3, 4, 5, 6, 7, 8, 9)}

Print all_are_pairs (contains 5 tuples): {
(1, 2, 3, 5, 6, 8, 9, 10)
(1, 3, 4, 5, 6, 7, 8, 10)
(1, 2, 4, 5, 6, 7, 9, 10)
(1, 2, 3, 4, 7, 8, 9, 10)
(2, 3, 4, 5, 6, 7, 8, 9)}

Print some_are_pairs (contains 0 tuples): {}

Print none_are_pairs (contains 0 tuples): {}

Print indecomposable (contains 0 tuples): {}

Print decomposable but no pairs (contains 0 tuples): {}

Print exceptional cycles (contains 0 tuples): {}

Below are debug outputs for each alpha in V whether it was put in the indecomposable set or the decomposable but no pairs set:


method validate_set_V(11, 4) ran to completion.
